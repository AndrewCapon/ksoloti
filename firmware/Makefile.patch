CCFLAGS = \
    -nostdlib \
    -fno-exceptions \
    -fno-rtti \
    -mcpu=cortex-m4 \
    -O3 \
    -fomit-frame-pointer \
    -falign-functions=16 \
    -mfloat-abi=hard \
    -mfpu=fpv4-sp-d16 \
    -Wunused-parameter \
    -DCORTEX_USE_FPU=TRUE \
    -DTHUMB_PRESENT \
    -mno-thumb-interwork \
    -DTHUMB_NO_INTERWORKING \
    -mthumb \
    -DTHUMB \
    -std=c++11 \
    -DARM_MATH_CM4 \
    -D__FPU_PRESENT \
    -fno-math-errno \
    -fno-threadsafe-statics \
    -fno-use-cxa-atexit \
    -Wno-unused-parameter \
    -fpermissive \
    -Wno-return-type 

LDFLAGS = \
    -nostartfiles \
    -Tramlink.ld \
    -mcpu=cortex-m4 \
    -mfloat-abi=hard \
    -mfpu=fpv4-sp-d16 \
    -mthumb \
    -mno-thumb-interwork

CC=arm-none-eabi-gcc
CPP=arm-none-eabi-g++
LD=arm-none-eabi-gcc
CP=arm-none-eabi-objcopy
DMP=arm-none-eabi-objdump
SIZ=arm-none-eabi-size

axoloti_runtime ?= ..
axoloti_release ?= ..
axoloti_home ?= ..
axoloti_libraries ?= ..
axoloti_firmware ?= ../firmware

CHIBIOS = ${axoloti_release}/chibios
CMSIS = ${axoloti_release}/CMSIS

EMPTY := 
SPACE := $(EMPTY) $(EMPTY)
BUILDDIR=$(subst $(SPACE),\ ,${axoloti_libraries}/build)
FIRMWARE=$(subst $(SPACE),\ ,${axoloti_firmware})

# include $(CHIBIOS)/os/hal/boards/ST_STM32F4_DISCOVERY/board.mk
# include $(CHIBIOS)/os/hal/ports/STM32/STM32F4xx/platform.mk
# include $(CHIBIOS)/os/hal/hal.mk
# include $(CHIBIOS)/os/rt/rt.mk
# include $(CHIBIOS)/os/various/fatfs_bindings/fatfs.mk
# include $(CHIBIOS)/os/rt/ports/ARMCMx/compilers/GCC/mk/port_v7m.mk


# Startup files.
include $(CHIBIOS)/os/common/ports/ARMCMx/compilers/GCC/mk/startup_stm32f4xx.mk
# HAL-OSAL files (optional).
include $(CHIBIOS)/os/hal/hal.mk
include $(CHIBIOS)/os/hal/ports/STM32/STM32F4xx/platform.mk
#include $(CHIBIOS)/os/hal/boards/ST_STM32F4_DISCOVERY/board.mk
include $(CHIBIOS)/os/hal/osal/rt/osal.mk
# RTOS files (optional).
include $(CHIBIOS)/os/rt/rt.mk
include $(CHIBIOS)/os/rt/ports/ARMCMx/compilers/GCC/mk/port_v7m.mk
# FAT stuff
include $(CHIBIOS)/os/various/fatfs_bindings/fatfs.mk


INCDIR = $(CMSIS)/Core/Include \
	 $(CMSIS)/DSP/Include \
         $(PORTINC) $(KERNINC) $(TESTINC) \
         $(HALINC) $(PLATFORMINC) $(BOARDINC) \
	 $(FATFSINC) \
         $(OSALINC) \
         ${FIRMWARE} \
	 $(CHIBIOS) \
         $(CHIBIOS)/os/various \
         ${FIRMWARE}/STM32F4xx_HAL_Driver/Inc \
	 ${FIRMWARE}/mutable_instruments \
	 $(CHIBIOS)/os/common/ports/ARMCMx/compilers/GCC \
         $(CHIBIOS)/os/common/ports/ARMCMx/devices/STM32F4xx \
         $(CHIBIOS)/os/ext/CMSIS/include \
         $(CHIBIOS)/os/ext/CMSIS/ST/STM32F4xx

# INCDIR = ${CMSIS}/Core/Include \
#          ${CMSIS}/DSP/Include \
#          $(STARTUPINC) \
#          $(PORTINC) $(KERNINC) $(TESTINC) \
#          $(HALINC) $(PLATFORMINC) $(BOARDINC) \
#          $(FATFSINC) \
#          $(OSALINC) \
#          $(CHIBIOS)/os/various \
#          ${FIRMWARE}/STM32_USB_Host_Library/Core/Inc \
#          ${FIRMWARE}/STM32_USB_Host_Library/Class/HID/Inc \
#          ${FIRMWARE}/STM32F4xx_HAL_Driver/Inc \
#          ${MUTABLE_INSTRUMENTS} \
#          ${MUTABLE_INSTRUMENTS}/warps \
#          ${MUTABLE_INSTRUMENTS}/braids \
#          ${MUTABLE_INSTRUMENTS}/rings \
#          ${MUTABLE_INSTRUMENTS}/elements \
#          ${MUTABLE_INSTRUMENTS}/stmlib \
# 	     $(CHIBIOS)/os/hal/lib/streams

# Paths
IINCDIR   = $(patsubst %,-I%,$(INCDIR) $(DINCDIR) $(UINCDIR))
LLIBDIR   = $(patsubst %,-L%,$(DLIBDIR) $(ULIBDIR))

all: ${BUILDDIR}/xpatch.bin

${BUILDDIR}/xpatch.h.gch: ${FIRMWARE}/xpatch.h ${FIRMWARE}/patch.h ${FIRMWARE}/axoloti.h ${FIRMWARE}/parameter_functions.h ${FIRMWARE}/axoloti_math.h ${FIRMWARE}/axoloti_filters.h
#	@echo Building precompiled header
	@$(CPP) $(CCFLAGS) $(IINCDIR) -Winvalid-pch -MD -MP -c ${FIRMWARE}/xpatch.h  -o ${BUILDDIR}/xpatch.h.gch

${BUILDDIR}/xpatch.bin: ${BUILDDIR}/xpatch.cpp ${BUILDDIR}/xpatch.h.gch
#	@echo Removing previous build files
	@rm -f ${BUILDDIR}/xpatch.o ${BUILDDIR}/xpatch.elf ${BUILDDIR}/xpatch.bin ${BUILDDIR}/xpatch.d ${BUILDDIR}/xpatch.map ${BUILDDIR}/xpatch.lst
#	@echo Compiling patch dependencies
	@$(CPP) $(CCFLAGS) -H $(IINCDIR) -Winvalid-pch -MD -MP --include ${BUILDDIR}/xpatch.h -c ${BUILDDIR}/xpatch.cpp -o ${BUILDDIR}/xpatch.o
#	@echo Linking patch dependencies
	@$(LD) $(LDFLAGS) ${BUILDDIR}/xpatch.o -Wl,-Map=${BUILDDIR}/xpatch.map,--cref,--just-symbols=${FIRMWARE}/build/axoloti.elf -o ${BUILDDIR}/xpatch.elf
#	@echo Creating binary
#	$(CP) -O binary -j .text  -j .init_array -j .rodata -j .rodata\* xpatch.elf xpatch.bin
#   -j .text.startup -j .text.memcpy
	@$(CP) -O binary ${BUILDDIR}/xpatch.elf ${BUILDDIR}/xpatch.bin
#	@echo Displaying size statistic
	@$(SIZ) --format=sysv ${BUILDDIR}/xpatch.elf

.PHONY: clean

clean:
	@rm -f ${BUILDDIR}/xpatch.o ${BUILDDIR}/xpatch.elf ${BUILDDIR}/xpatch.bin ${BUILDDIR}/xpatch.d ${BUILDDIR}/xpatch.map ${BUILDDIR}/xpatch.lst ${BUILDDIR}/xpatch.h.gch